<?php

// Data functions (insert, update, delete, form) for table patient_visits

// This script and data application were generated by AppGini 5.50
// Download AppGini for free from http://bigprof.com/appgini/download/

function patient_visits_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('patient_visits');
	if(!$arrPerm[1]){
		return false;
	}

	$data['type_of_visit'] = makeSafe($_REQUEST['type_of_visit']);
		if($data['type_of_visit'] == empty_lookup_value){ $data['type_of_visit'] = ''; }
	$data['prescription'] = br2nl(makeSafe($_REQUEST['prescription']));
	$data['diagnosis'] = br2nl(makeSafe($_REQUEST['diagnosis']));
	$data['comments'] = br2nl(makeSafe($_REQUEST['comments']));
	$data['observation_date'] = intval($_REQUEST['observation_dateYear']) . '-' . intval($_REQUEST['observation_dateMonth']) . '-' . intval($_REQUEST['observation_dateDay']);
	$data['observation_date'] = parseMySQLDate($data['observation_date'], '1');
	$data['observation_time'] = makeSafe($_REQUEST['observation_time']);
		if($data['observation_time'] == empty_lookup_value){ $data['observation_time'] = ''; }
	$data['observation_time'] = time24($data['observation_time']);
	if($data['type_of_visit'] == '') $data['type_of_visit'] = "Medical examination";
	if($data['type_of_visit']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Type of visit': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	// hook: patient_visits_before_insert
	if(function_exists('patient_visits_before_insert')){
		$args=array();
		if(!patient_visits_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('insert into `patient_visits` set       `type_of_visit`=' . (($data['type_of_visit'] !== '' && $data['type_of_visit'] !== NULL) ? "'{$data['type_of_visit']}'" : 'NULL') . ', `prescription`=' . (($data['prescription'] !== '' && $data['prescription'] !== NULL) ? "'{$data['prescription']}'" : 'NULL') . ', `diagnosis`=' . (($data['diagnosis'] !== '' && $data['diagnosis'] !== NULL) ? "'{$data['diagnosis']}'" : 'NULL') . ', `comments`=' . (($data['comments'] !== '' && $data['comments'] !== NULL) ? "'{$data['comments']}'" : 'NULL') . ', `observation_date`=' . (($data['observation_date'] !== '' && $data['observation_date'] !== NULL) ? "'{$data['observation_date']}'" : 'NULL') . ', `observation_time`=' . (($data['observation_time'] !== '' && $data['observation_time'] !== NULL) ? "'{$data['observation_time']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"patient_visits_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// automatic patient
	if($_REQUEST['filterer_patient']){
		sql("update `patient_visits` set `patient`='" . makeSafe($_REQUEST['filterer_patient']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// hook: patient_visits_after_insert
	if(function_exists('patient_visits_after_insert')){
		$res = sql("select * from `patient_visits` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!patient_visits_after_insert($data, getMemberInfo(), $args)){ return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID); }
	}

	// mm: save ownership data
	sql("insert ignore into membership_userrecords set tableName='patient_visits', pkValue='$recID', memberID='".getLoggedMemberID()."', dateAdded='".time()."', dateUpdated='".time()."', groupID='".getLoggedGroupID()."'", $eo);

	return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID);
}

function patient_visits_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('patient_visits');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='patient_visits' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='patient_visits' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: patient_visits_before_delete
	if(function_exists('patient_visits_before_delete')){
		$args=array();
		if(!patient_visits_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `patient_visits` where `id`='$selected_id'", $eo);

	// hook: patient_visits_after_delete
	if(function_exists('patient_visits_after_delete')){
		$args=array();
		patient_visits_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='patient_visits' and pkValue='$selected_id'", $eo);
}

function patient_visits_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('patient_visits');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='patient_visits' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='patient_visits' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['type_of_visit'] = makeSafe($_REQUEST['type_of_visit']);
		if($data['type_of_visit'] == empty_lookup_value){ $data['type_of_visit'] = ''; }
	if($data['type_of_visit']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Type of visit': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['prescription'] = br2nl(makeSafe($_REQUEST['prescription']));
	$data['diagnosis'] = br2nl(makeSafe($_REQUEST['diagnosis']));
	$data['comments'] = br2nl(makeSafe($_REQUEST['comments']));
	$data['observation_date'] = intval($_REQUEST['observation_dateYear']) . '-' . intval($_REQUEST['observation_dateMonth']) . '-' . intval($_REQUEST['observation_dateDay']);
	$data['observation_date'] = parseMySQLDate($data['observation_date'], '1');
	$data['observation_time'] = makeSafe($_REQUEST['observation_time']);
		if($data['observation_time'] == empty_lookup_value){ $data['observation_time'] = ''; }
	$data['observation_time'] = time24($data['observation_time']);
	$data['selectedID']=makeSafe($selected_id);

	// hook: patient_visits_before_update
	if(function_exists('patient_visits_before_update')){
		$args=array();
		if(!patient_visits_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `patient_visits` set       `type_of_visit`=' . (($data['type_of_visit'] !== '' && $data['type_of_visit'] !== NULL) ? "'{$data['type_of_visit']}'" : 'NULL') . ', `prescription`=' . (($data['prescription'] !== '' && $data['prescription'] !== NULL) ? "'{$data['prescription']}'" : 'NULL') . ', `diagnosis`=' . (($data['diagnosis'] !== '' && $data['diagnosis'] !== NULL) ? "'{$data['diagnosis']}'" : 'NULL') . ', `comments`=' . (($data['comments'] !== '' && $data['comments'] !== NULL) ? "'{$data['comments']}'" : 'NULL') . ', `observation_date`=' . (($data['observation_date'] !== '' && $data['observation_date'] !== NULL) ? "'{$data['observation_date']}'" : 'NULL') . ', `observation_time`=' . (($data['observation_time'] !== '' && $data['observation_time'] !== NULL) ? "'{$data['observation_time']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="patient_visits_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: patient_visits_after_update
	if(function_exists('patient_visits_after_update')){
		$res = sql("SELECT * FROM `patient_visits` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!patient_visits_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='patient_visits' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function patient_visits_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('patient_visits');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_patient = thisOr(undo_magic_quotes($_REQUEST['filterer_patient']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: patient
	$combo_patient = new DataCombo;
	// combobox: type_of_visit
	$combo_type_of_visit = new Combo;
	$combo_type_of_visit->ListType = 2;
	$combo_type_of_visit->MultipleSeparator = ', ';
	$combo_type_of_visit->ListBoxHeight = 10;
	$combo_type_of_visit->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/patient_visits.type_of_visit.csv')){
		$type_of_visit_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/patient_visits.type_of_visit.csv')));
		$combo_type_of_visit->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($type_of_visit_data)));
		$combo_type_of_visit->ListData = $combo_type_of_visit->ListItem;
	}else{
		$combo_type_of_visit->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Regular checkup;;Medical examination;;Follow up")));
		$combo_type_of_visit->ListData = $combo_type_of_visit->ListItem;
	}
	$combo_type_of_visit->SelectName = 'type_of_visit';
	$combo_type_of_visit->AllowNull = false;
	// combobox: observation_date
	$combo_observation_date = new DateCombo;
	$combo_observation_date->DateFormat = "mdy";
	$combo_observation_date->MinYear = 1900;
	$combo_observation_date->MaxYear = 2100;
	$combo_observation_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_observation_date->MonthNames = $Translation['month names'];
	$combo_observation_date->NamePrefix = 'observation_date';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='patient_visits' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='patient_visits' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `patient_visits` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found']);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_patient->SelectedData = $row['patient'];
		$combo_type_of_visit->SelectedData = $row['type_of_visit'];
		$combo_observation_date->DefaultDate = $row['observation_date'];
	}else{
		$combo_patient->SelectedData = $filterer_patient;
		$combo_type_of_visit->SelectedText = ( $_REQUEST['FilterField'][1]=='3' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "Medical examination");
	}
	$combo_patient->HTML = '<span id="patient-container' . $rnd1 . '"></span><input type="hidden" name="patient" id="patient' . $rnd1 . '" value="' . htmlspecialchars($combo_patient->SelectedData, ENT_QUOTES, 'iso-8859-1') . '">';
	$combo_patient->MatchText = '<span id="patient-container-readonly' . $rnd1 . '"></span><input type="hidden" name="patient" id="patient' . $rnd1 . '" value="' . htmlspecialchars($combo_patient->SelectedData, ENT_QUOTES, 'iso-8859-1') . '">';
	$combo_type_of_visit->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		var current_patient__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['patient'] : $filterer_patient); ?>"};

		jQuery(function() {
			if(typeof(patient_reload__RAND__) == 'function') patient_reload__RAND__();
		});
		function patient_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			jQuery("#patient-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					jQuery.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: current_patient__RAND__.value, t: 'patient_visits', f: 'patient' }
					}).done(function(resp){
						c({
							id: resp.results[0].id,
							text: resp.results[0].text
						});
						jQuery('[name="patient"]').val(resp.results[0].id);
						jQuery('[id=patient-container-readonly__RAND__]').html('<span id="patient-match-text">' + resp.results[0].text + '</span>');


						if(typeof(patient_update_autofills__RAND__) == 'function') patient_update_autofills__RAND__();
					});
				},
				width: ($j('fieldset .col-xs-11').width() - 109) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'patient_visits', f: 'patient' }; },
					results: function(resp, page){ return resp; }
				}
			}).on('change', function(e){
				current_patient__RAND__.value = e.added.id;
				current_patient__RAND__.text = e.added.text;
				jQuery('[name="patient"]').val(e.added.id);


				if(typeof(patient_update_autofills__RAND__) == 'function') patient_update_autofills__RAND__();
			});

			if(!$j("#patient-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: current_patient__RAND__.value, t: 'patient_visits', f: 'patient' }
				}).done(function(resp){
					$j('[name="patient"]').val(resp.results[0].id);
					$j('[id=patient-container-readonly__RAND__]').html('<span id="patient-match-text">' + resp.results[0].text + '</span>');

					if(typeof(patient_update_autofills__RAND__) == 'function') patient_update_autofills__RAND__();
				});
			}

		<?php }else{ ?>

			jQuery.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: current_patient__RAND__.value, t: 'patient_visits', f: 'patient' }
			}).done(function(resp){
				jQuery('[id=patient-container__RAND__], [id=patient-container-readonly__RAND__]').html('<span id="patient-match-text">' + resp.results[0].text + '</span>');

				if(typeof(patient_update_autofills__RAND__) == 'function') patient_update_autofills__RAND__();
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$templateCode = @file_get_contents('./templates/patient_visits_templateDVP.html');
	}else{
		$templateCode = @file_get_contents('./templates/patient_visits_templateDV.html');
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Patient visit details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return patient_visits_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return patient_visits_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return patient_visits_validateData();"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('input[name=type_of_visit]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=type_of_visit]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#prescription').replaceWith('<div class=\"form-control-static\" id=\"prescription\">' + (jQuery('#prescription').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#diagnosis').replaceWith('<div class=\"form-control-static\" id=\"diagnosis\">' + (jQuery('#diagnosis').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#comments').replaceWith('<div class=\"form-control-static\" id=\"comments\">' + (jQuery('#comments').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#observation_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#observation_dateDay, #observation_dateMonth, #observation_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#observation_time').replaceWith('<div class=\"form-control-static\" id=\"observation_time\">' + (jQuery('#observation_time').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('#observation_time').addClass('always_shown').timepicker({ showSeconds: true, showMeridian: true, showInputs: false, disableFocus: true, minuteStep: 5 });";
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(patient)%%>', $combo_patient->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(patient)%%>', $combo_patient->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(patient)%%>', urlencode($combo_patient->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(type_of_visit)%%>', $combo_type_of_visit->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(type_of_visit)%%>', $combo_type_of_visit->SelectedData, $templateCode);
	$templateCode=str_replace('<%%COMBO(observation_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_observation_date->GetHTML(true) . '</div>' : $combo_observation_date->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(observation_date)%%>', $combo_observation_date->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'patient' => array('patients', 'Patient'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-lg" id="' . $ptfc[0] . '_view_parent" title="' . htmlspecialchars($Translation['View'] . ' ' . $ptfc[1], ENT_QUOTES, 'iso-8859-1') . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . htmlspecialchars($Translation['Add New'] . ' ' . $ptfc[1], ENT_QUOTES, 'iso-8859-1') . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(patient)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(type_of_visit)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(prescription)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(diagnosis)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(comments)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(observation_date)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(observation_time)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', htmlspecialchars($row['id'], ENT_QUOTES, 'iso-8859-1'), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(patient)%%>', htmlspecialchars($row['patient'], ENT_QUOTES, 'iso-8859-1'), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(patient)%%>', urlencode($urow['patient']), $templateCode);
		$templateCode=str_replace('<%%VALUE(type_of_visit)%%>', htmlspecialchars($row['type_of_visit'], ENT_QUOTES, 'iso-8859-1'), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(type_of_visit)%%>', urlencode($urow['type_of_visit']), $templateCode);
		if($dvprint){
			$templateCode = str_replace('<%%VALUE(prescription)%%>', nl2br(htmlspecialchars($row['prescription'], ENT_QUOTES, 'iso-8859-1')), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(prescription)%%>', htmlspecialchars($row['prescription'], ENT_QUOTES, 'iso-8859-1'), $templateCode);
		}
		$templateCode=str_replace('<%%URLVALUE(prescription)%%>', urlencode($urow['prescription']), $templateCode);
		if($dvprint){
			$templateCode = str_replace('<%%VALUE(diagnosis)%%>', nl2br(htmlspecialchars($row['diagnosis'], ENT_QUOTES, 'iso-8859-1')), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(diagnosis)%%>', htmlspecialchars($row['diagnosis'], ENT_QUOTES, 'iso-8859-1'), $templateCode);
		}
		$templateCode=str_replace('<%%URLVALUE(diagnosis)%%>', urlencode($urow['diagnosis']), $templateCode);
		if($dvprint){
			$templateCode = str_replace('<%%VALUE(comments)%%>', nl2br(htmlspecialchars($row['comments'], ENT_QUOTES, 'iso-8859-1')), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(comments)%%>', htmlspecialchars($row['comments'], ENT_QUOTES, 'iso-8859-1'), $templateCode);
		}
		$templateCode=str_replace('<%%URLVALUE(comments)%%>', urlencode($urow['comments']), $templateCode);
		$templateCode=str_replace('<%%VALUE(observation_date)%%>', @date('m/d/Y', @strtotime(htmlspecialchars($row['observation_date'], ENT_QUOTES, 'iso-8859-1'))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(observation_date)%%>', urlencode(@date('m/d/Y', @strtotime(htmlspecialchars($urow['observation_date'], ENT_QUOTES, 'iso-8859-1')))), $templateCode);
		$templateCode=str_replace('<%%VALUE(observation_time)%%>', time12(htmlspecialchars($row['observation_time'], ENT_QUOTES, 'iso-8859-1')), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(observation_time)%%>', urlencode(time12($urow['observation_time'])), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(patient)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(patient)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(type_of_visit)%%>', 'Medical examination', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(type_of_visit)%%>', urlencode('Medical examination'), $templateCode);
		$templateCode=str_replace('<%%VALUE(prescription)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(prescription)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(diagnosis)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(diagnosis)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(comments)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(comments)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(observation_date)%%>', '1', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(observation_date)%%>', urlencode('1'), $templateCode);
		$templateCode=str_replace('<%%VALUE(observation_time)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(observation_time)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	if( $_REQUEST['FilterField'][1]=='2' && $_REQUEST['FilterOperator'][1]=='<=>'){
		$templateCode.="\n<input type=hidden name=patient value=\"".htmlspecialchars((get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]), ENT_QUOTES, 'iso-8859-1')."\">\n";
	}

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	// hook: patient_visits_dv
	if(function_exists('patient_visits_dv')){
		$args=array();
		patient_visits_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>